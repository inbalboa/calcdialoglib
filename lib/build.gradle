plugins {
    id 'com.android.library'
}

def getVersionName() {
    'v' + LIB_VERSION
}

def getVersionCode() {
    def result = 0
    def parts = LIB_VERSION.split('.').reverse()
    for (int i = 0; i < parts.size(); i++) {
        result += Integer.parseInt(part) * pow(100, i)
    }

    result
}

def getBody(String tag) {
    def changelog = file("../CHANGELOG.md")

    def lines = changelog.readLines()
    def versionChanges = new StringBuilder()
    def foundVersion = false
    for (line in lines) {
        if (foundVersion && line ==~ /^#+\s*.+$/) {
            break
        } else if (line ==~ /^#+\s*$tag$/) {
            foundVersion = true
        } else if (foundVersion) {
            versionChanges.append(line)
            versionChanges.append(System.getProperty("line.separator"))
        }
    }
    if (!foundVersion) {
        throw new GradleException("No release notes for version $tag")
    }

    return versionChanges.toString().trim()
}

android {
    compileSdkVersion 36

    def code = getVersionCode()
    def name = getVersionName()

    defaultConfig {
        minSdkVersion 24
        targetSdk 36
        versionCode code
        versionName name
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_18
        targetCompatibility JavaVersion.VERSION_18
    }

    buildFeatures {
        viewBinding true
    }

    namespace 'com.github.inbalboa.calcdialog'
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'com.google.android.material:material:1.12.0'

    testImplementation "junit:junit:4.13.2"
}

tasks.register('release') {
    def tag = getVersionName()
    def body = getBody(tag)
    doLast {
        exec {
            commandLine 'git', 'tag', '-a', tag, '-m', body
        }
        exec {
            commandLine 'git', 'push', '--atomic', 'origin', 'main', tag
        }
    }
}
